<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:cxf="http://camel.apache.org/schema/cxf"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans
  	   http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf
       http://camel.apache.org/schema/cxf/camel-cxf.xsd
       http://cxf.apache.org/jaxrs
       http://cxf.apache.org/schemas/jaxrs.xsd
       ">

    <cxf:cxfEndpoint id="SoapServer"
                     address="http://0.0.0.0:9090/EventMonitorPort"
                     serviceClass="org.jboss.eventmonitor.model.ws.EventMonitor">
        <cxf:outInterceptors>
            <ref bean="loggingOutInterceptor" />
        </cxf:outInterceptors>
        <cxf:inInterceptors>
            <ref bean="loggingInInterceptor" />
        </cxf:inInterceptors>
    </cxf:cxfEndpoint>
    <bean id="loggingOutInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor" />
    <bean id="loggingInInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor" />

<!-- 
    <cxf:rsServer id="rsServer"
                address="/rest/events/new"
                serviceClass="org.drools.jax.rs.CommandExecutorImpl">
    </cxf:rsServer>
 -->

    <bean id="processor" class="org.jboss.eventmonitor.DroolsEventProcessor"/>
    <bean id="beanCopy" class="org.jboss.eventmonitor.BeanCopy"/>
    
    <camelContext id="event-monitor-context" trace="false" xmlns="http://camel.apache.org/schema/spring">

        <dataFormats>
            <soapjaxb contextPath="org.jboss.eventmonitor.model.ws" id="soapFormat" />
        <!-- 
         -->
            <json id="json" library="Jackson" unmarshalTypeName="org.jboss.eventmonitor.model.json.Event"/>
        </dataFormats>
 
        <route id="soap">
            <!--
            <setExchangePattern pattern="InOut"/>
            <from uri="cxf:bean:SoapServer?dataFormat=PAYLOAD"/>
            <from uri="cxf:bean:SoapServer?dataFormat=CXF_MESSAGE"/>
            -->
            <from uri="cxf:bean:SoapServer?dataFormat=MESSAGE"/>
            <unmarshal ref="soapFormat"/>
            <!--
            <setHeader name="operation"><constant>newEvent</constant></setHeader>
            <setHeader name="original"><simple>${body}</simple></setHeader>
            -->
            <setBody><simple>${body.event}</simple></setBody>
            <to uri="log:0000000000 ${body}"/>
            <bean ref="beanCopy"/>
            <!-- 
            <convertBodyTo type="String"/>
             -->
            <to uri="direct:in"/>
            <marshal ref="soapFormat"/>
        </route>
        <route id="rest">
        <!-- 
            <from uri="cxfrs:bean:RestServer"/>
         -->
            <from uri="direct:rest"/>
            <unmarshal ref="json"/>
            <bean ref="beanCopy"/>
            <to uri="direct:in"/>
        </route>
        
        <route id="event-monitor-service">
            <from uri="direct:in"/>
            <log message="11111111111 - ${body}"/>
            <process ref="processor"/>
            <log message="22222222222 - ${body}"/>
            <!--
            <to uri="mock:result"/>
            <setBody><simple>${header.original}</simple></setBody>
            -->
        </route>
        
    </camelContext>

</beans>
